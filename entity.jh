entity Student {
	index String,
    fullNameArabic String,
    phone String
    //one user
	//one faculty
    //one project
    }

entity Project {
	name String,
    details TextBlob,
    objectives TextBlob,
    problems TextBlob,
    //many students
	//one supervisor
    //one faculty
    //many files
    //many observations
}
enum Gender{ MALE, FEMALE, OTHER}

entity Supervisor{
	fullName String,
    role String,
    gender Gender,
    email String,
    phoneNumber String,
    //many projects,
	//one faculty
}

entity Faculty {
	name String,
    code String,
    //supervisors
    //students
    //projects
    //announcments
}

enum AnnouncementType {
	SUBMISSION, DISCUSSIONS, OBSERVATIONS, OTHERS
}

entity Announcement{
	title String
	content TextBlob,
    announcementType AnnouncementType,
    startDate LocalDate,
    endDate LocalDate,
    open Boolean
    //faculty
  }

entity Observation {
	title String
	detail TextBlob
    creationDate Instant
    //one project
    //one file
}

entity File {
	name String
    file Blob
    uploadDate Instant
    type String
    //one project
    //one observation
}

relationship OneToOne {
	Student{user(login)} to User{student(index)} with jpaDerivedIdentifier
    Observation{file(name)} to File{observation(name)}
}

relationship OneToMany {
    Faculty{students(index)} to Student{faculty(name)}
    Faculty{projects(name)} to Project{faculty(name)}
    Faculty{announcments(title)} to Announcement{faculty(name)}
    Supervisor{projects(name)} to Project{supervisor(fullName)}
    Project{students(index)} to Student{project(name)}
    Project{files(name)} to File{project(name)}
    Project{observations(title)} to Observation{project(name)}
}

relationship ManyToMany {
	Faculty{supervisors(fullName)} to Supervisor{faculties(name)}
}

paginate * with pagination
service * with serviceClass
filter *
