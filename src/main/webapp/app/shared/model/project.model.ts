<<<<<<< HEAD
import { IPhase } from 'app/shared/model/phase.model';
import { IFile } from 'app/shared/model/file.model';
import { IStudent } from 'app/shared/model/student.model';
=======
import { IStudent } from 'app/shared/model/student.model';
import { IFile } from 'app/shared/model/file.model';
import { IObservation } from 'app/shared/model/observation.model';
import { IFaculty } from 'app/shared/model/faculty.model';
import { ISupervisor } from 'app/shared/model/supervisor.model';
>>>>>>> Initial version of pums generated by JHipster-6.10.5 with entity

export interface IProject {
  id?: number;
  name?: string;
<<<<<<< HEAD
  detials?: any;
  objective?: any;
  problem?: any;
  phases?: IPhase[];
  files?: IFile[];
  students?: IStudent[];
=======
  details?: any;
  objectives?: any;
  problems?: any;
  students?: IStudent[];
  files?: IFile[];
  observations?: IObservation[];
  faculty?: IFaculty;
  supervisor?: ISupervisor;
>>>>>>> Initial version of pums generated by JHipster-6.10.5 with entity
}

export class Project implements IProject {
  constructor(
    public id?: number,
    public name?: string,
<<<<<<< HEAD
    public detials?: any,
    public objective?: any,
    public problem?: any,
    public phases?: IPhase[],
    public files?: IFile[],
    public students?: IStudent[]
=======
    public details?: any,
    public objectives?: any,
    public problems?: any,
    public students?: IStudent[],
    public files?: IFile[],
    public observations?: IObservation[],
    public faculty?: IFaculty,
    public supervisor?: ISupervisor
>>>>>>> Initial version of pums generated by JHipster-6.10.5 with entity
  ) {}
}
